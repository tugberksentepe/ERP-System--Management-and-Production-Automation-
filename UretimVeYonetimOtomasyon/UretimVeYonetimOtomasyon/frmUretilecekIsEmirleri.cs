using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Xml.Serialization;
using DevExpress.XtraPrinting.BarCode.Native;

namespace UretimVeYonetimOtomasyon
{
    public partial class frmUretilecekIsEmirleri : Form
    {
        SqlConnection conn = new SqlConnection("Data Source=localhost\\SQLEXPRESS;Initial Catalog=\"Uretim ve Yonetim Sistemi\";Integrated Security=True");
        public frmUretilecekIsEmirleri()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSource1.FillAsync();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSource1.FillAsync();
        }

        void isEmriListeleme()
        {
            conn.Open();
            DataTable dt = new DataTable();
            SqlCommand sorgu1 = new SqlCommand("SELECT ISEMRI_NUMARASI, STOK_KODU, STOK_ADI, ISEMRI_ACIKLAMASI, SUBSTRING(ISEMRI_TARIHI,0,10) AS 'İŞ EMRİ TARİHİ', SUBSTRING(TESLIM_TARIHI,0,10) AS 'TESLİM TARİHİ', SIPARIS_NO, MIKTAR, SIPKALEM_ID FROM TBL_ISEMRI WHERE DURUM='Y'", conn);
            SqlDataAdapter  da = new SqlDataAdapter(sorgu1);
            da.Fill(dt);
            gridControl1.DataSource = dt;
            conn.Close();
        }

        string x1="";
        void uretimSonuKaydiNumarasiHesaplama()
        {
            conn.Open();
            SqlCommand sorgu1 = new SqlCommand("SELECT TOP 1 CONCAT('U',REPLICATE('0',10-(LEN(SUBSTRING(URETIMSONUKAYDI_NUMARASI,2,9)+1)+1)),SUBSTRING(URETIMSONUKAYDI_NUMARASI,2,9)+1) AS 'ÜRETİM SONU KAYDI NUMARASI' FROM TBL_URETIMSONUKAYITLARI ORDER BY URETIMSONUKAYDI_NUMARASI DESC", conn);
            SqlDataReader dr1 = sorgu1.ExecuteReader();
            while(dr1.Read())
            {
                x1 = dr1[0].ToString();
            }
            conn.Close();
        }

        private void frmUretilecekIsEmirleri_Load(object sender, EventArgs e)
        {
            
        }

        string isEmriNo = "";
        string sipNo = "";
        private void repositoryItemButtonEdit1_ButtonClick(object sender, DevExpress.XtraEditors.Controls.ButtonPressedEventArgs e)
        {
            int x = gridView1.FocusedRowHandle;
            isEmriNo = gridView1.GetRowCellValue(x, "ISEMRI_NUMARASI").ToString();
            sipNo = gridView1.GetRowCellValue(x, "SIPARIS_NO").ToString();
            DialogResult sonuc = MessageBox.Show("Seçili Ürünü Üretmek İstediğinizden Emin Misiniz?", "Üretim Sonu KAydı Uyarısı", MessageBoxButtons.YesNo, MessageBoxIcon.Information);
            if(sonuc == DialogResult.Yes )
            {
                string stokKodu = "";
                string stokAdi = "";
                string miktar = "";
                string sipKalemID = "";
                string musteriKodu = "";
                string musteriAdi = "";

                conn.Open();
                SqlCommand sorgu1 = new SqlCommand("SELECT * FROM TBL_ISEMRI WHERE ISEMRI_NUMARASI='"+isEmriNo+"'", conn);
                SqlDataReader dr = sorgu1.ExecuteReader();
                while (dr.Read())
                {
                    stokKodu = dr[1].ToString();
                    stokAdi = dr[2].ToString();
                    miktar = dr[7].ToString();
                    sipKalemID= dr[8].ToString();
                }
                conn.Close();

                conn.Open();
                SqlCommand sorgu2 = new SqlCommand("SELECT SIP.MUSTERI_KODU, MK.MUSTERI_ADI FROM TBL_SIPARISLER SIP LEFT JOIN TBL_MUSTERIKAYITLARI MK ON SIP.MUSTERI_KODU=MK.MUSTERI_KODU WHERE SIPARIS_NO='"+sipNo+"'", conn);
                SqlDataReader dr2 = sorgu2.ExecuteReader();
                while (dr2.Read())
                {
                    musteriKodu= dr2[0].ToString();
                    musteriAdi= dr2[1].ToString();
                }
                conn.Close();

                //ÜRETİM SONU KAYDI OLUŞTURMAK
                uretimSonuKaydiNumarasiHesaplama();
                conn.Open();
                SqlCommand sorgu3 = new SqlCommand("INSERT INTO TBL_URETIMSONUKAYITLARI (URETIMSONUKAYDI_NUMARASI, ISEMRI_NUMARASI, STOK_KODU, STOK_ADI, MIKTAR, SIPARIS_NUMARASI, SIPKALEM_ID, MUSTERI_KODU, MUSTERI_ADI) VALUES ('"+x1+"','"+isEmriNo+"','"+stokKodu+"','"+stokAdi+"','"+miktar.Replace(',','.')+"','"+sipNo+"','"+sipKalemID+"','"+musteriKodu+"','"+musteriAdi+"')", conn);
                sorgu3.ExecuteNonQuery();
                conn.Close();

                //İŞ EMRİ KAPATMA 
                conn.Open();
                SqlCommand sorgu4 = new SqlCommand("UPDATE TBL_ISEMRI SET DURUM='E' WHERE ISEMRI_NUMARASI='" + isEmriNo + "'", conn);
                sorgu4.ExecuteNonQuery();
                conn.Close();

                //SİPARİŞ KALEMİ KAPATMA 
                conn.Open();
                SqlCommand sorgu5 = new SqlCommand("UPDATE TBL_SIPARISKALEMLERI SET URETIMDURUMU='B' WHERE SIPKALEM_ID='" + sipKalemID + "'", conn);
                sorgu5.ExecuteNonQuery();
                conn.Close();

                //STOK HAREKETİ ATMA
                conn.Open();
                SqlCommand sorgu6 = new SqlCommand("INSERT INTO TBL_STOKHAREKETLERI (URETIMSONUKAYDI_NUMARASI, ISEMRI_NUMARASI, STOK_KODU, STOK_ADI, G_MIKTAR, C_MIKTAR, MUSTERI_ADI, ACIKLAMA) VALUES ('"+x1+"','"+isEmriNo+"','"+stokKodu+"','"+stokAdi+"','"+miktar.Replace(',','.')+"','0','"+musteriAdi+"','ÜRETİM')", conn);
                sorgu6.ExecuteNonQuery();
                conn.Close();

                isEmriListeleme();

                MessageBox.Show("Üreim İşlemi Başarıyla Tamamlandı.");
            }
            else
            {
                MessageBox.Show("Üretim İşlemi İptal Edilmişir.");
            }
        }
    }
}
